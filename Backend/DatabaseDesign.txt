CREATE TABLE Users(
    user_id INT NOT NULL AUTO_INCREMENT,
    email_id VARCHAR( 20 ) NOT NULL ,
    user_name VARCHAR(20 ) NOT NULL,
    token VARCHAR(20 ) NOT NULL,
    loggedIn BOOL NOT NULL,
    PRIMARY KEY ( user_id )
)

CREATE TABLE Place(
    place_id INT NOT NULL AUTO_INCREMENT,
    address_id INT NOT NULL,
    place_name VARCHAR(20 ) NOT NULL,
    rooms_count INT NOT NULL,
    bathrooms_count INT NOT NULL,
    area_squnit INT NOT NULL,
    price INT NOT NULL,
    phone_number VARCHAR(15)  NOT NULL,
    email VARCHAR(15) NOT NULL,
    description VARCHAR(50) NOT NULL,
    page_visits_count INT NOT NULL,
    occupied TINYINT(1),
    PRIMARY KEY ( place_id ),
    FOREIGN KEY (address_id) REFERENCES Address (address_id)
)

CREATE TABLE UserPlace(
    id INT NOT NULL AUTO_INCREMENT,
    user_id INT NOT NULL,
    place_id INT NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (user_id) REFERENCES Users (user_id)
);

CREATE TABLE Address(
    address_id INT NOT NULL AUTO_INCREMENT,
    street_level VARCHAR(40) NOT NULL,
    city_name VARCHAR(20) NOT NULL,
    state VARCHAR(20) NOT NULL,
    zip_code VARCHAR(10) NOT NULL,
    PRIMARY KEY ( address_id )
)

CREATE TABLE Pictures(
    pictures_id INT NOT NULL AUTO_INCREMENT,
    image_url VARCHAR(30) NOT NULL,
    tenant_id INT NOT NULL,
    PRIMARY KEY ( pictures_id ),
    FOREIGN KEY (tenant_id) REFERENCES Users(user_id)
)

CREATE TABLE Searches(
    search_id INT NOT NULL AUTO_INCREMENT,
    user_id INT NOT NULL,
    keywords VARCHAR(20) NOT NULL,
    cityname VARCHAR(20) NOT NULL,
    zip_code VARCHAR(20) NOT NULL,
    property_type VARCHAR(20) NOT NULL,
    max_rental_price INT NOT NULL,
    min_rental_price INT NOT NULL,
    notification_freq ENUM('realtime', 'daily', 'weekly'),
    PRIMARY KEY (search_id),
    FOREIGN KEY (user_id) REFERENCES Users (user_id)
)


CREATE TABLE Favourites(
    id INT NOT NULL AUTO_INCREMENT,
    user_id INT NOT NULL,
    place_id INT NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (user_id) REFERENCES Users(user_id),
    FOREIGN KEY (place_id) REFERENCES Place(place_id)
);